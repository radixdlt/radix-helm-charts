# Default values for data-aggregator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

alert_thresholds:
  HighTimeSinceLastLedgerCommit: 30

cluster_name: rdx-works-main-dev

alerts:
  enabled: true

image:
  repository: docker.io/radixdlt/ng-babylon-data-aggregator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets:
nameOverride: ""
fullnameOverride: ""

migrations:
  enableInitContainer: false

metrics:
  port: 1234
  enabled: false
  serviceMonitor:
    enabled: true
    interval: 5s
  dashboard_url: https://grafana.com
  
readinessProbe:
  initialDelaySeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  periodSeconds: 15
livenessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 5
  failureThreshold: 5
  periodSeconds: 10

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    add:
    - NET_ADMIN
  privileged: false
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 2Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations:
- key: "networkGatewayInstance"
  operator: "Equal"
  value: "true"
  effect: "PreferNoSchedule"

# The podAffinity achieve the following during scheduling:
# - Place the data-aggregator pods on the same AZ as the gateway-api pods of the same namespace.
#
# The goal is to avoid as much as possible cross-AZ traffic between all of those pods.
#
affinity:
  podAffinity: {}

config:
  ASPNETCORE_URLS: "http://*:8080"
  logging:
    LogLevel:
      Default: "Information"
      Microsoft_Hosting_Lifetime: "Information"

  data_aggregator:
    "MempoolConfiguration":
      "MinDelayBetweenMissingFromMempoolAndResubmissionSeconds": 10
      "MinDelayBetweenResubmissionsSeconds": 10
      "StopResubmittingAfterSeconds": 300
      "PruneCommittedAfterSeconds": "31556952" # one calendar year. This is quoted because it's expected to be passed as a String
      "PruneMissingTransactionsAfterTimeSinceLastGatewaySubmissionSeconds": 604800
      "PruneMissingTransactionsAfterTimeSinceFirstSeenSeconds": 604800
      "PruneRequiresMissingFromMempoolForSeconds": 60
    
    "LedgerConfirmation":
      "QuorumRequiresTrustProportion": 0.51
      "OnlyUseSufficientlySyncedUpNodesForQuorumCalculation": true
      "SufficientlySyncedStateVersionThreshold": 1000
      "MaxCommitBatchSize": 1000
      "MaxTransactionPipelineSizePerNode": 3000

  postgres:
    hostname: "postgres-postgresql"
    hostnameRO: "postgres-postgresql"
    port: 5432
    dbname: "radixdlt_ledger"
    # Use an already existing secret to get the credentials from
    existingSecret: ""
    existingSecretUsernameKey: username
    existingSecretPasswordKey: password

    min_pool_size: "10"
    max_pool_size: "1000"
    connection_lifetime: "600"
    command_timeout: "600"
    read_buffer_size: "32768"
    write_buffer_size: "32768"

  network:
    name: mainnet
    # Value to label resources according to the network used
    environment: "mainnet"
    disableCoreAPICertificates: true
    disableFallbackCertificates: true
    nodes:
      # Unique name of the node. 
      - name: Core1
        enabled: true
        address: "https://somehost/core"
        trust_weighting: "1"
        # Use an already existing secret to get the credentials from
        existingSecret: babylon-gateway-core1-credentials
        existingSecretKey: base64-encoded-auth