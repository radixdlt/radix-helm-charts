name: Helm charts

on:
  pull_request: {}

  push:
    branches:
      - master

env:
  KUBE_VERSION: 1.21.0
  KUBECONFORM_VERSION: 0.5.0

jobs:
  Checks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.6.0

    - name: Download Pluto
      uses: FairwindsOps/pluto/github-action@v5.11.1

    - name: Set up kubeconform
      run: |
        wget https://github.com/yannh/kubeconform/releases/download/v${KUBECONFORM_VERSION}/kubeconform-linux-amd64.tar.gz
        tar xvf kubeconform-linux-amd64.tar.gz
        sudo cp ./kubeconform /usr/local/bin
        wget https://raw.githubusercontent.com/yannh/kubeconform/v${KUBECONFORM_VERSION}/scripts/openapi2jsonschema.py
        chmod +x openapi2jsonschema.py
        sudo cp openapi2jsonschema.py /usr/local/bin

        export FILENAME_FORMAT='{kind}'
        openapi2jsonschema.py https://raw.githubusercontent.com/prometheus-community/helm-charts/main/charts/kube-prometheus-stack/charts/crds/crds/crd-servicemonitors.yaml
        openapi2jsonschema.py https://raw.githubusercontent.com/prometheus-community/helm-charts/main/charts/kube-prometheus-stack/charts/crds/crds/crd-prometheusrules.yaml
        openapi2jsonschema.py https://raw.githubusercontent.com/prometheus-community/helm-charts/main/charts/kube-prometheus-stack/charts/crds/crds/crd-alertmanagerconfigs.yaml
        openapi2jsonschema.py https://raw.githubusercontent.com/external-secrets/kubernetes-external-secrets/master/charts/kubernetes-external-secrets/crds/kubernetes-client.io_externalsecrets_crd.yaml

        sudo mkdir -p /etc/kubeconform/
        sudo mv *.json /etc/kubeconform/

    - name: Helm Lint
      run: make lint

    - name: Use pluto
      run: |
        set -euo pipefail

        OUTPUT_DIR=$(git rev-parse --show-toplevel)/output

        for chart in charts/*; do
          mkdir -p $OUTPUT_DIR
          helm template $chart --output-dir $OUTPUT_DIR
          pluto detect-files -d $OUTPUT_DIR
          rm -rf $OUTPUT_DIR
        done

    - name: Run kubeconform
      run: |
        set -euo pipefail

        OUTPUT_DIR=$(git rev-parse --show-toplevel)/output

        for chart in charts/*; do
          mkdir -p $OUTPUT_DIR
          helm template $chart --output-dir $OUTPUT_DIR
          kubeconform -schema-location default -kubernetes-version=${KUBE_VERSION} -schema-location '/etc/kubeconform/{{ .ResourceKind }}.json' -summary $OUTPUT_DIR
          rm -rf $OUTPUT_DIR
        done
